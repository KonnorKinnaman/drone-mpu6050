
manualControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000075c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000708  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000075c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000078c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007f8  00000000  00000000  0000081c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006de  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000370  00000000  00000000  000016f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a8  00000000  00000000  00001a64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003d8  00000000  00000000  00001b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000112  00000000  00000000  00001ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001ff6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  58:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  5c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  60:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  64:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  68:	08 00       	.word	0x0008	; ????
  6a:	00 00       	nop
  6c:	be 92       	st	-X, r11
  6e:	24 49       	sbci	r18, 0x94	; 148
  70:	12 3e       	cpi	r17, 0xE2	; 226
  72:	ab aa       	std	Y+51, r10	; 0x33
  74:	aa 2a       	or	r10, r26
  76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
  78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
  7a:	4c 3e       	cpi	r20, 0xEC	; 236
  7c:	00 00       	nop
  7e:	00 80       	ld	r0, Z
  80:	be ab       	std	Y+54, r27	; 0x36
  82:	aa aa       	std	Y+50, r10	; 0x32
  84:	aa 3e       	cpi	r26, 0xEA	; 234
  86:	00 00       	nop
  88:	00 00       	nop
  8a:	bf 00       	.word	0x00bf	; ????
  8c:	00 00       	nop
  8e:	80 3f       	cpi	r24, 0xF0	; 240
  90:	00 00       	nop
  92:	00 00       	nop
  94:	00 08       	sbc	r0, r0
  96:	41 78       	andi	r20, 0x81	; 129
  98:	d3 bb       	out	0x13, r29	; 19
  9a:	43 87       	std	Z+11, r20	; 0x0b
  9c:	d1 13       	cpse	r29, r17
  9e:	3d 19       	sub	r19, r13
  a0:	0e 3c       	cpi	r16, 0xCE	; 206
  a2:	c3 bd       	out	0x23, r28	; 35
  a4:	42 82       	std	Z+2, r4	; 0x02
  a6:	ad 2b       	or	r26, r29
  a8:	3e 68       	ori	r19, 0x8E	; 142
  aa:	ec 82       	std	Y+4, r14	; 0x04
  ac:	76 be       	out	0x36, r7	; 54
  ae:	d9 8f       	std	Y+25, r29	; 0x19
  b0:	e1 a9       	ldd	r30, Z+49	; 0x31
  b2:	3e 4c       	sbci	r19, 0xCE	; 206
  b4:	80 ef       	ldi	r24, 0xF0	; 240
  b6:	ff be       	out	0x3f, r15	; 63
  b8:	01 c4       	rjmp	.+2050   	; 0x8bc <__DATA_REGION_LENGTH__+0xbc>
  ba:	ff 7f       	andi	r31, 0xFF	; 255
  bc:	3f 00       	.word	0x003f	; ????
  be:	00 00       	nop
	...

000000c2 <__ctors_end>:
  c2:	11 24       	eor	r1, r1
  c4:	1f be       	out	0x3f, r1	; 63
  c6:	cf ef       	ldi	r28, 0xFF	; 255
  c8:	d8 e0       	ldi	r29, 0x08	; 8
  ca:	de bf       	out	0x3e, r29	; 62
  cc:	cd bf       	out	0x3d, r28	; 61
  ce:	0e 94 6d 00 	call	0xda	; 0xda <main>
  d2:	0c 94 82 03 	jmp	0x704	; 0x704 <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <main>:
#define F_CPU 16000000UL

void init_ALL(void);

int main(void)
{
  da:	cf 93       	push	r28
  dc:	df 93       	push	r29
  de:	00 d0       	rcall	.+0      	; 0xe0 <main+0x6>
  e0:	00 d0       	rcall	.+0      	; 0xe2 <main+0x8>
  e2:	cd b7       	in	r28, 0x3d	; 61
  e4:	de b7       	in	r29, 0x3e	; 62
	
	uint32_t testVal2 = 658358;
  e6:	86 eb       	ldi	r24, 0xB6	; 182
  e8:	9b e0       	ldi	r25, 0x0B	; 11
  ea:	aa e0       	ldi	r26, 0x0A	; 10
  ec:	b0 e0       	ldi	r27, 0x00	; 0
  ee:	89 83       	std	Y+1, r24	; 0x01
  f0:	9a 83       	std	Y+2, r25	; 0x02
  f2:	ab 83       	std	Y+3, r26	; 0x03
  f4:	bc 83       	std	Y+4, r27	; 0x04
	//float testVal = 135.467;
    
    while (1) 
    {
		USART_transmit(testVal2);
  f6:	89 81       	ldd	r24, Y+1	; 0x01
  f8:	9a 81       	ldd	r25, Y+2	; 0x02
  fa:	ab 81       	ldd	r26, Y+3	; 0x03
  fc:	bc 81       	ldd	r27, Y+4	; 0x04
  fe:	bc 01       	movw	r22, r24
 100:	cd 01       	movw	r24, r26
 102:	0e 94 84 00 	call	0x108	; 0x108 <USART_transmit>
		//_delay_ms(500);
    }
 106:	f7 cf       	rjmp	.-18     	; 0xf6 <main+0x1c>

00000108 <USART_transmit>:
	UBRR0L = ubbr;
}


void USART_transmit(uint32_t data)
{
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	cd b7       	in	r28, 0x3d	; 61
 10e:	de b7       	in	r29, 0x3e	; 62
 110:	66 97       	sbiw	r28, 0x16	; 22
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	f8 94       	cli
 116:	de bf       	out	0x3e, r29	; 62
 118:	0f be       	out	0x3f, r0	; 63
 11a:	cd bf       	out	0x3d, r28	; 61
 11c:	6b 8b       	std	Y+19, r22	; 0x13
 11e:	7c 8b       	std	Y+20, r23	; 0x14
 120:	8d 8b       	std	Y+21, r24	; 0x15
 122:	9e 8b       	std	Y+22, r25	; 0x16
	int nDigits = log10(data)+1;
 124:	6b 89       	ldd	r22, Y+19	; 0x13
 126:	7c 89       	ldd	r23, Y+20	; 0x14
 128:	8d 89       	ldd	r24, Y+21	; 0x15
 12a:	9e 89       	ldd	r25, Y+22	; 0x16
 12c:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <__floatunsisf>
 130:	dc 01       	movw	r26, r24
 132:	cb 01       	movw	r24, r22
 134:	bc 01       	movw	r22, r24
 136:	cd 01       	movw	r24, r26
 138:	0e 94 66 02 	call	0x4cc	; 0x4cc <log10>
 13c:	dc 01       	movw	r26, r24
 13e:	cb 01       	movw	r24, r22
 140:	20 e0       	ldi	r18, 0x00	; 0
 142:	30 e0       	ldi	r19, 0x00	; 0
 144:	40 e8       	ldi	r20, 0x80	; 128
 146:	5f e3       	ldi	r21, 0x3F	; 63
 148:	bc 01       	movw	r22, r24
 14a:	cd 01       	movw	r24, r26
 14c:	0e 94 36 01 	call	0x26c	; 0x26c <__addsf3>
 150:	dc 01       	movw	r26, r24
 152:	cb 01       	movw	r24, r22
 154:	bc 01       	movw	r22, r24
 156:	cd 01       	movw	r24, r26
 158:	0e 94 a2 01 	call	0x344	; 0x344 <__fixsfsi>
 15c:	dc 01       	movw	r26, r24
 15e:	cb 01       	movw	r24, r22
 160:	9e 83       	std	Y+6, r25	; 0x06
 162:	8d 83       	std	Y+5, r24	; 0x05
	int numParser;
	char transmit_buffer[10];
	//sprintf(transmit_buffer, "%d", data);
	for (int i = nDigits; i > 0; i--)
 164:	8d 81       	ldd	r24, Y+5	; 0x05
 166:	9e 81       	ldd	r25, Y+6	; 0x06
 168:	9a 83       	std	Y+2, r25	; 0x02
 16a:	89 83       	std	Y+1, r24	; 0x01
 16c:	33 c0       	rjmp	.+102    	; 0x1d4 <USART_transmit+0xcc>
	{
		numParser = data%10;
 16e:	8b 89       	ldd	r24, Y+19	; 0x13
 170:	9c 89       	ldd	r25, Y+20	; 0x14
 172:	ad 89       	ldd	r26, Y+21	; 0x15
 174:	be 89       	ldd	r27, Y+22	; 0x16
 176:	2a e0       	ldi	r18, 0x0A	; 10
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	40 e0       	ldi	r20, 0x00	; 0
 17c:	50 e0       	ldi	r21, 0x00	; 0
 17e:	bc 01       	movw	r22, r24
 180:	cd 01       	movw	r24, r26
 182:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__udivmodsi4>
 186:	dc 01       	movw	r26, r24
 188:	cb 01       	movw	r24, r22
 18a:	98 87       	std	Y+8, r25	; 0x08
 18c:	8f 83       	std	Y+7, r24	; 0x07
		data = data/10;
 18e:	8b 89       	ldd	r24, Y+19	; 0x13
 190:	9c 89       	ldd	r25, Y+20	; 0x14
 192:	ad 89       	ldd	r26, Y+21	; 0x15
 194:	be 89       	ldd	r27, Y+22	; 0x16
 196:	2a e0       	ldi	r18, 0x0A	; 10
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	40 e0       	ldi	r20, 0x00	; 0
 19c:	50 e0       	ldi	r21, 0x00	; 0
 19e:	bc 01       	movw	r22, r24
 1a0:	cd 01       	movw	r24, r26
 1a2:	0e 94 60 03 	call	0x6c0	; 0x6c0 <__udivmodsi4>
 1a6:	da 01       	movw	r26, r20
 1a8:	c9 01       	movw	r24, r18
 1aa:	8b 8b       	std	Y+19, r24	; 0x13
 1ac:	9c 8b       	std	Y+20, r25	; 0x14
 1ae:	ad 8b       	std	Y+21, r26	; 0x15
 1b0:	be 8b       	std	Y+22, r27	; 0x16
		transmit_buffer[i] = numParser + '0';
 1b2:	8f 81       	ldd	r24, Y+7	; 0x07
 1b4:	40 e3       	ldi	r20, 0x30	; 48
 1b6:	48 0f       	add	r20, r24
 1b8:	9e 01       	movw	r18, r28
 1ba:	27 5f       	subi	r18, 0xF7	; 247
 1bc:	3f 4f       	sbci	r19, 0xFF	; 255
 1be:	89 81       	ldd	r24, Y+1	; 0x01
 1c0:	9a 81       	ldd	r25, Y+2	; 0x02
 1c2:	82 0f       	add	r24, r18
 1c4:	93 1f       	adc	r25, r19
 1c6:	fc 01       	movw	r30, r24
 1c8:	40 83       	st	Z, r20
{
	int nDigits = log10(data)+1;
	int numParser;
	char transmit_buffer[10];
	//sprintf(transmit_buffer, "%d", data);
	for (int i = nDigits; i > 0; i--)
 1ca:	89 81       	ldd	r24, Y+1	; 0x01
 1cc:	9a 81       	ldd	r25, Y+2	; 0x02
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	9a 83       	std	Y+2, r25	; 0x02
 1d2:	89 83       	std	Y+1, r24	; 0x01
 1d4:	89 81       	ldd	r24, Y+1	; 0x01
 1d6:	9a 81       	ldd	r25, Y+2	; 0x02
 1d8:	18 16       	cp	r1, r24
 1da:	19 06       	cpc	r1, r25
 1dc:	44 f2       	brlt	.-112    	; 0x16e <USART_transmit+0x66>
	{
		numParser = data%10;
		data = data/10;
		transmit_buffer[i] = numParser + '0';
	}
	for (int i = 1; i < nDigits+1; i++)
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	9c 83       	std	Y+4, r25	; 0x04
 1e4:	8b 83       	std	Y+3, r24	; 0x03
 1e6:	1d c0       	rjmp	.+58     	; 0x222 <USART_transmit+0x11a>
	{
		while ((UCSR0A & (1<<UDRE0))==0);	//wait for flag to be set
 1e8:	00 00       	nop
 1ea:	80 ec       	ldi	r24, 0xC0	; 192
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	fc 01       	movw	r30, r24
 1f0:	80 81       	ld	r24, Z
 1f2:	88 2f       	mov	r24, r24
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	80 72       	andi	r24, 0x20	; 32
 1f8:	99 27       	eor	r25, r25
 1fa:	89 2b       	or	r24, r25
 1fc:	b1 f3       	breq	.-20     	; 0x1ea <USART_transmit+0xe2>
		UDR0 = transmit_buffer[i];
 1fe:	86 ec       	ldi	r24, 0xC6	; 198
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	ae 01       	movw	r20, r28
 204:	47 5f       	subi	r20, 0xF7	; 247
 206:	5f 4f       	sbci	r21, 0xFF	; 255
 208:	2b 81       	ldd	r18, Y+3	; 0x03
 20a:	3c 81       	ldd	r19, Y+4	; 0x04
 20c:	24 0f       	add	r18, r20
 20e:	35 1f       	adc	r19, r21
 210:	f9 01       	movw	r30, r18
 212:	20 81       	ld	r18, Z
 214:	fc 01       	movw	r30, r24
 216:	20 83       	st	Z, r18
	{
		numParser = data%10;
		data = data/10;
		transmit_buffer[i] = numParser + '0';
	}
	for (int i = 1; i < nDigits+1; i++)
 218:	8b 81       	ldd	r24, Y+3	; 0x03
 21a:	9c 81       	ldd	r25, Y+4	; 0x04
 21c:	01 96       	adiw	r24, 0x01	; 1
 21e:	9c 83       	std	Y+4, r25	; 0x04
 220:	8b 83       	std	Y+3, r24	; 0x03
 222:	8d 81       	ldd	r24, Y+5	; 0x05
 224:	9e 81       	ldd	r25, Y+6	; 0x06
 226:	9c 01       	movw	r18, r24
 228:	2f 5f       	subi	r18, 0xFF	; 255
 22a:	3f 4f       	sbci	r19, 0xFF	; 255
 22c:	8b 81       	ldd	r24, Y+3	; 0x03
 22e:	9c 81       	ldd	r25, Y+4	; 0x04
 230:	82 17       	cp	r24, r18
 232:	93 07       	cpc	r25, r19
 234:	cc f2       	brlt	.-78     	; 0x1e8 <USART_transmit+0xe0>
	{
		while ((UCSR0A & (1<<UDRE0))==0);	//wait for flag to be set
		UDR0 = transmit_buffer[i];
	}
	while ((UCSR0A & (1<<UDRE0))==0);	//wait for flag to be set
 236:	00 00       	nop
 238:	80 ec       	ldi	r24, 0xC0	; 192
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	fc 01       	movw	r30, r24
 23e:	80 81       	ld	r24, Z
 240:	88 2f       	mov	r24, r24
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	80 72       	andi	r24, 0x20	; 32
 246:	99 27       	eor	r25, r25
 248:	89 2b       	or	r24, r25
 24a:	b1 f3       	breq	.-20     	; 0x238 <USART_transmit+0x130>
	UDR0 = 0x0A;	//New Line
 24c:	86 ec       	ldi	r24, 0xC6	; 198
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	2a e0       	ldi	r18, 0x0A	; 10
 252:	fc 01       	movw	r30, r24
 254:	20 83       	st	Z, r18
 256:	00 00       	nop
 258:	66 96       	adiw	r28, 0x16	; 22
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <__subsf3>:
 26a:	50 58       	subi	r21, 0x80	; 128

0000026c <__addsf3>:
 26c:	bb 27       	eor	r27, r27
 26e:	aa 27       	eor	r26, r26
 270:	0e 94 4d 01 	call	0x29a	; 0x29a <__addsf3x>
 274:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_round>
 278:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_pscA>
 27c:	38 f0       	brcs	.+14     	; 0x28c <__addsf3+0x20>
 27e:	0e 94 25 02 	call	0x44a	; 0x44a <__fp_pscB>
 282:	20 f0       	brcs	.+8      	; 0x28c <__addsf3+0x20>
 284:	39 f4       	brne	.+14     	; 0x294 <__addsf3+0x28>
 286:	9f 3f       	cpi	r25, 0xFF	; 255
 288:	19 f4       	brne	.+6      	; 0x290 <__addsf3+0x24>
 28a:	26 f4       	brtc	.+8      	; 0x294 <__addsf3+0x28>
 28c:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_nan>
 290:	0e f4       	brtc	.+2      	; 0x294 <__addsf3+0x28>
 292:	e0 95       	com	r30
 294:	e7 fb       	bst	r30, 7
 296:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>

0000029a <__addsf3x>:
 29a:	e9 2f       	mov	r30, r25
 29c:	0e 94 3d 02 	call	0x47a	; 0x47a <__fp_split3>
 2a0:	58 f3       	brcs	.-42     	; 0x278 <__addsf3+0xc>
 2a2:	ba 17       	cp	r27, r26
 2a4:	62 07       	cpc	r22, r18
 2a6:	73 07       	cpc	r23, r19
 2a8:	84 07       	cpc	r24, r20
 2aa:	95 07       	cpc	r25, r21
 2ac:	20 f0       	brcs	.+8      	; 0x2b6 <__addsf3x+0x1c>
 2ae:	79 f4       	brne	.+30     	; 0x2ce <__addsf3x+0x34>
 2b0:	a6 f5       	brtc	.+104    	; 0x31a <__addsf3x+0x80>
 2b2:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__fp_zero>
 2b6:	0e f4       	brtc	.+2      	; 0x2ba <__addsf3x+0x20>
 2b8:	e0 95       	com	r30
 2ba:	0b 2e       	mov	r0, r27
 2bc:	ba 2f       	mov	r27, r26
 2be:	a0 2d       	mov	r26, r0
 2c0:	0b 01       	movw	r0, r22
 2c2:	b9 01       	movw	r22, r18
 2c4:	90 01       	movw	r18, r0
 2c6:	0c 01       	movw	r0, r24
 2c8:	ca 01       	movw	r24, r20
 2ca:	a0 01       	movw	r20, r0
 2cc:	11 24       	eor	r1, r1
 2ce:	ff 27       	eor	r31, r31
 2d0:	59 1b       	sub	r21, r25
 2d2:	99 f0       	breq	.+38     	; 0x2fa <__addsf3x+0x60>
 2d4:	59 3f       	cpi	r21, 0xF9	; 249
 2d6:	50 f4       	brcc	.+20     	; 0x2ec <__addsf3x+0x52>
 2d8:	50 3e       	cpi	r21, 0xE0	; 224
 2da:	68 f1       	brcs	.+90     	; 0x336 <__addsf3x+0x9c>
 2dc:	1a 16       	cp	r1, r26
 2de:	f0 40       	sbci	r31, 0x00	; 0
 2e0:	a2 2f       	mov	r26, r18
 2e2:	23 2f       	mov	r18, r19
 2e4:	34 2f       	mov	r19, r20
 2e6:	44 27       	eor	r20, r20
 2e8:	58 5f       	subi	r21, 0xF8	; 248
 2ea:	f3 cf       	rjmp	.-26     	; 0x2d2 <__addsf3x+0x38>
 2ec:	46 95       	lsr	r20
 2ee:	37 95       	ror	r19
 2f0:	27 95       	ror	r18
 2f2:	a7 95       	ror	r26
 2f4:	f0 40       	sbci	r31, 0x00	; 0
 2f6:	53 95       	inc	r21
 2f8:	c9 f7       	brne	.-14     	; 0x2ec <__addsf3x+0x52>
 2fa:	7e f4       	brtc	.+30     	; 0x31a <__addsf3x+0x80>
 2fc:	1f 16       	cp	r1, r31
 2fe:	ba 0b       	sbc	r27, r26
 300:	62 0b       	sbc	r22, r18
 302:	73 0b       	sbc	r23, r19
 304:	84 0b       	sbc	r24, r20
 306:	ba f0       	brmi	.+46     	; 0x336 <__addsf3x+0x9c>
 308:	91 50       	subi	r25, 0x01	; 1
 30a:	a1 f0       	breq	.+40     	; 0x334 <__addsf3x+0x9a>
 30c:	ff 0f       	add	r31, r31
 30e:	bb 1f       	adc	r27, r27
 310:	66 1f       	adc	r22, r22
 312:	77 1f       	adc	r23, r23
 314:	88 1f       	adc	r24, r24
 316:	c2 f7       	brpl	.-16     	; 0x308 <__addsf3x+0x6e>
 318:	0e c0       	rjmp	.+28     	; 0x336 <__addsf3x+0x9c>
 31a:	ba 0f       	add	r27, r26
 31c:	62 1f       	adc	r22, r18
 31e:	73 1f       	adc	r23, r19
 320:	84 1f       	adc	r24, r20
 322:	48 f4       	brcc	.+18     	; 0x336 <__addsf3x+0x9c>
 324:	87 95       	ror	r24
 326:	77 95       	ror	r23
 328:	67 95       	ror	r22
 32a:	b7 95       	ror	r27
 32c:	f7 95       	ror	r31
 32e:	9e 3f       	cpi	r25, 0xFE	; 254
 330:	08 f0       	brcs	.+2      	; 0x334 <__addsf3x+0x9a>
 332:	b0 cf       	rjmp	.-160    	; 0x294 <__addsf3+0x28>
 334:	93 95       	inc	r25
 336:	88 0f       	add	r24, r24
 338:	08 f0       	brcs	.+2      	; 0x33c <__addsf3x+0xa2>
 33a:	99 27       	eor	r25, r25
 33c:	ee 0f       	add	r30, r30
 33e:	97 95       	ror	r25
 340:	87 95       	ror	r24
 342:	08 95       	ret

00000344 <__fixsfsi>:
 344:	0e 94 a9 01 	call	0x352	; 0x352 <__fixunssfsi>
 348:	68 94       	set
 34a:	b1 11       	cpse	r27, r1
 34c:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_szero>
 350:	08 95       	ret

00000352 <__fixunssfsi>:
 352:	0e 94 45 02 	call	0x48a	; 0x48a <__fp_splitA>
 356:	88 f0       	brcs	.+34     	; 0x37a <__fixunssfsi+0x28>
 358:	9f 57       	subi	r25, 0x7F	; 127
 35a:	98 f0       	brcs	.+38     	; 0x382 <__fixunssfsi+0x30>
 35c:	b9 2f       	mov	r27, r25
 35e:	99 27       	eor	r25, r25
 360:	b7 51       	subi	r27, 0x17	; 23
 362:	b0 f0       	brcs	.+44     	; 0x390 <__fixunssfsi+0x3e>
 364:	e1 f0       	breq	.+56     	; 0x39e <__fixunssfsi+0x4c>
 366:	66 0f       	add	r22, r22
 368:	77 1f       	adc	r23, r23
 36a:	88 1f       	adc	r24, r24
 36c:	99 1f       	adc	r25, r25
 36e:	1a f0       	brmi	.+6      	; 0x376 <__fixunssfsi+0x24>
 370:	ba 95       	dec	r27
 372:	c9 f7       	brne	.-14     	; 0x366 <__fixunssfsi+0x14>
 374:	14 c0       	rjmp	.+40     	; 0x39e <__fixunssfsi+0x4c>
 376:	b1 30       	cpi	r27, 0x01	; 1
 378:	91 f0       	breq	.+36     	; 0x39e <__fixunssfsi+0x4c>
 37a:	0e 94 5f 02 	call	0x4be	; 0x4be <__fp_zero>
 37e:	b1 e0       	ldi	r27, 0x01	; 1
 380:	08 95       	ret
 382:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__fp_zero>
 386:	67 2f       	mov	r22, r23
 388:	78 2f       	mov	r23, r24
 38a:	88 27       	eor	r24, r24
 38c:	b8 5f       	subi	r27, 0xF8	; 248
 38e:	39 f0       	breq	.+14     	; 0x39e <__fixunssfsi+0x4c>
 390:	b9 3f       	cpi	r27, 0xF9	; 249
 392:	cc f3       	brlt	.-14     	; 0x386 <__fixunssfsi+0x34>
 394:	86 95       	lsr	r24
 396:	77 95       	ror	r23
 398:	67 95       	ror	r22
 39a:	b3 95       	inc	r27
 39c:	d9 f7       	brne	.-10     	; 0x394 <__fixunssfsi+0x42>
 39e:	3e f4       	brtc	.+14     	; 0x3ae <__fixunssfsi+0x5c>
 3a0:	90 95       	com	r25
 3a2:	80 95       	com	r24
 3a4:	70 95       	com	r23
 3a6:	61 95       	neg	r22
 3a8:	7f 4f       	sbci	r23, 0xFF	; 255
 3aa:	8f 4f       	sbci	r24, 0xFF	; 255
 3ac:	9f 4f       	sbci	r25, 0xFF	; 255
 3ae:	08 95       	ret

000003b0 <__floatunsisf>:
 3b0:	e8 94       	clt
 3b2:	09 c0       	rjmp	.+18     	; 0x3c6 <__floatsisf+0x12>

000003b4 <__floatsisf>:
 3b4:	97 fb       	bst	r25, 7
 3b6:	3e f4       	brtc	.+14     	; 0x3c6 <__floatsisf+0x12>
 3b8:	90 95       	com	r25
 3ba:	80 95       	com	r24
 3bc:	70 95       	com	r23
 3be:	61 95       	neg	r22
 3c0:	7f 4f       	sbci	r23, 0xFF	; 255
 3c2:	8f 4f       	sbci	r24, 0xFF	; 255
 3c4:	9f 4f       	sbci	r25, 0xFF	; 255
 3c6:	99 23       	and	r25, r25
 3c8:	a9 f0       	breq	.+42     	; 0x3f4 <__floatsisf+0x40>
 3ca:	f9 2f       	mov	r31, r25
 3cc:	96 e9       	ldi	r25, 0x96	; 150
 3ce:	bb 27       	eor	r27, r27
 3d0:	93 95       	inc	r25
 3d2:	f6 95       	lsr	r31
 3d4:	87 95       	ror	r24
 3d6:	77 95       	ror	r23
 3d8:	67 95       	ror	r22
 3da:	b7 95       	ror	r27
 3dc:	f1 11       	cpse	r31, r1
 3de:	f8 cf       	rjmp	.-16     	; 0x3d0 <__floatsisf+0x1c>
 3e0:	fa f4       	brpl	.+62     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3e2:	bb 0f       	add	r27, r27
 3e4:	11 f4       	brne	.+4      	; 0x3ea <__floatsisf+0x36>
 3e6:	60 ff       	sbrs	r22, 0
 3e8:	1b c0       	rjmp	.+54     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3ea:	6f 5f       	subi	r22, 0xFF	; 255
 3ec:	7f 4f       	sbci	r23, 0xFF	; 255
 3ee:	8f 4f       	sbci	r24, 0xFF	; 255
 3f0:	9f 4f       	sbci	r25, 0xFF	; 255
 3f2:	16 c0       	rjmp	.+44     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3f4:	88 23       	and	r24, r24
 3f6:	11 f0       	breq	.+4      	; 0x3fc <__floatsisf+0x48>
 3f8:	96 e9       	ldi	r25, 0x96	; 150
 3fa:	11 c0       	rjmp	.+34     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3fc:	77 23       	and	r23, r23
 3fe:	21 f0       	breq	.+8      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 400:	9e e8       	ldi	r25, 0x8E	; 142
 402:	87 2f       	mov	r24, r23
 404:	76 2f       	mov	r23, r22
 406:	05 c0       	rjmp	.+10     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 408:	66 23       	and	r22, r22
 40a:	71 f0       	breq	.+28     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 40c:	96 e8       	ldi	r25, 0x86	; 134
 40e:	86 2f       	mov	r24, r22
 410:	70 e0       	ldi	r23, 0x00	; 0
 412:	60 e0       	ldi	r22, 0x00	; 0
 414:	2a f0       	brmi	.+10     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 416:	9a 95       	dec	r25
 418:	66 0f       	add	r22, r22
 41a:	77 1f       	adc	r23, r23
 41c:	88 1f       	adc	r24, r24
 41e:	da f7       	brpl	.-10     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 420:	88 0f       	add	r24, r24
 422:	96 95       	lsr	r25
 424:	87 95       	ror	r24
 426:	97 f9       	bld	r25, 7
 428:	08 95       	ret

0000042a <__fp_inf>:
 42a:	97 f9       	bld	r25, 7
 42c:	9f 67       	ori	r25, 0x7F	; 127
 42e:	80 e8       	ldi	r24, 0x80	; 128
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	08 95       	ret

00000436 <__fp_nan>:
 436:	9f ef       	ldi	r25, 0xFF	; 255
 438:	80 ec       	ldi	r24, 0xC0	; 192
 43a:	08 95       	ret

0000043c <__fp_pscA>:
 43c:	00 24       	eor	r0, r0
 43e:	0a 94       	dec	r0
 440:	16 16       	cp	r1, r22
 442:	17 06       	cpc	r1, r23
 444:	18 06       	cpc	r1, r24
 446:	09 06       	cpc	r0, r25
 448:	08 95       	ret

0000044a <__fp_pscB>:
 44a:	00 24       	eor	r0, r0
 44c:	0a 94       	dec	r0
 44e:	12 16       	cp	r1, r18
 450:	13 06       	cpc	r1, r19
 452:	14 06       	cpc	r1, r20
 454:	05 06       	cpc	r0, r21
 456:	08 95       	ret

00000458 <__fp_round>:
 458:	09 2e       	mov	r0, r25
 45a:	03 94       	inc	r0
 45c:	00 0c       	add	r0, r0
 45e:	11 f4       	brne	.+4      	; 0x464 <__fp_round+0xc>
 460:	88 23       	and	r24, r24
 462:	52 f0       	brmi	.+20     	; 0x478 <__fp_round+0x20>
 464:	bb 0f       	add	r27, r27
 466:	40 f4       	brcc	.+16     	; 0x478 <__fp_round+0x20>
 468:	bf 2b       	or	r27, r31
 46a:	11 f4       	brne	.+4      	; 0x470 <__fp_round+0x18>
 46c:	60 ff       	sbrs	r22, 0
 46e:	04 c0       	rjmp	.+8      	; 0x478 <__fp_round+0x20>
 470:	6f 5f       	subi	r22, 0xFF	; 255
 472:	7f 4f       	sbci	r23, 0xFF	; 255
 474:	8f 4f       	sbci	r24, 0xFF	; 255
 476:	9f 4f       	sbci	r25, 0xFF	; 255
 478:	08 95       	ret

0000047a <__fp_split3>:
 47a:	57 fd       	sbrc	r21, 7
 47c:	90 58       	subi	r25, 0x80	; 128
 47e:	44 0f       	add	r20, r20
 480:	55 1f       	adc	r21, r21
 482:	59 f0       	breq	.+22     	; 0x49a <__fp_splitA+0x10>
 484:	5f 3f       	cpi	r21, 0xFF	; 255
 486:	71 f0       	breq	.+28     	; 0x4a4 <__fp_splitA+0x1a>
 488:	47 95       	ror	r20

0000048a <__fp_splitA>:
 48a:	88 0f       	add	r24, r24
 48c:	97 fb       	bst	r25, 7
 48e:	99 1f       	adc	r25, r25
 490:	61 f0       	breq	.+24     	; 0x4aa <__fp_splitA+0x20>
 492:	9f 3f       	cpi	r25, 0xFF	; 255
 494:	79 f0       	breq	.+30     	; 0x4b4 <__fp_splitA+0x2a>
 496:	87 95       	ror	r24
 498:	08 95       	ret
 49a:	12 16       	cp	r1, r18
 49c:	13 06       	cpc	r1, r19
 49e:	14 06       	cpc	r1, r20
 4a0:	55 1f       	adc	r21, r21
 4a2:	f2 cf       	rjmp	.-28     	; 0x488 <__fp_split3+0xe>
 4a4:	46 95       	lsr	r20
 4a6:	f1 df       	rcall	.-30     	; 0x48a <__fp_splitA>
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <__fp_splitA+0x30>
 4aa:	16 16       	cp	r1, r22
 4ac:	17 06       	cpc	r1, r23
 4ae:	18 06       	cpc	r1, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	f1 cf       	rjmp	.-30     	; 0x496 <__fp_splitA+0xc>
 4b4:	86 95       	lsr	r24
 4b6:	71 05       	cpc	r23, r1
 4b8:	61 05       	cpc	r22, r1
 4ba:	08 94       	sec
 4bc:	08 95       	ret

000004be <__fp_zero>:
 4be:	e8 94       	clt

000004c0 <__fp_szero>:
 4c0:	bb 27       	eor	r27, r27
 4c2:	66 27       	eor	r22, r22
 4c4:	77 27       	eor	r23, r23
 4c6:	cb 01       	movw	r24, r22
 4c8:	97 f9       	bld	r25, 7
 4ca:	08 95       	ret

000004cc <log10>:
 4cc:	0e 94 76 02 	call	0x4ec	; 0x4ec <log>
 4d0:	29 ed       	ldi	r18, 0xD9	; 217
 4d2:	3b e5       	ldi	r19, 0x5B	; 91
 4d4:	4e ed       	ldi	r20, 0xDE	; 222
 4d6:	5e e3       	ldi	r21, 0x3E	; 62
 4d8:	0c 94 be 02 	jmp	0x57c	; 0x57c <__mulsf3>
 4dc:	16 f0       	brts	.+4      	; 0x4e2 <log10+0x16>
 4de:	0c 94 2b 03 	jmp	0x656	; 0x656 <__fp_mpack>
 4e2:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_nan>
 4e6:	68 94       	set
 4e8:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>

000004ec <log>:
 4ec:	0e 94 45 02 	call	0x48a	; 0x48a <__fp_splitA>
 4f0:	a8 f3       	brcs	.-22     	; 0x4dc <log10+0x10>
 4f2:	99 23       	and	r25, r25
 4f4:	c1 f3       	breq	.-16     	; 0x4e6 <log10+0x1a>
 4f6:	ae f3       	brts	.-22     	; 0x4e2 <log10+0x16>
 4f8:	df 93       	push	r29
 4fa:	cf 93       	push	r28
 4fc:	1f 93       	push	r17
 4fe:	0f 93       	push	r16
 500:	ff 92       	push	r15
 502:	c9 2f       	mov	r28, r25
 504:	dd 27       	eor	r29, r29
 506:	88 23       	and	r24, r24
 508:	2a f0       	brmi	.+10     	; 0x514 <log+0x28>
 50a:	21 97       	sbiw	r28, 0x01	; 1
 50c:	66 0f       	add	r22, r22
 50e:	77 1f       	adc	r23, r23
 510:	88 1f       	adc	r24, r24
 512:	da f7       	brpl	.-10     	; 0x50a <log+0x1e>
 514:	20 e0       	ldi	r18, 0x00	; 0
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	40 e8       	ldi	r20, 0x80	; 128
 51a:	5f eb       	ldi	r21, 0xBF	; 191
 51c:	9f e3       	ldi	r25, 0x3F	; 63
 51e:	88 39       	cpi	r24, 0x98	; 152
 520:	20 f0       	brcs	.+8      	; 0x52a <log+0x3e>
 522:	80 3e       	cpi	r24, 0xE0	; 224
 524:	38 f0       	brcs	.+14     	; 0x534 <log+0x48>
 526:	21 96       	adiw	r28, 0x01	; 1
 528:	8f 77       	andi	r24, 0x7F	; 127
 52a:	0e 94 36 01 	call	0x26c	; 0x26c <__addsf3>
 52e:	e8 e6       	ldi	r30, 0x68	; 104
 530:	f0 e0       	ldi	r31, 0x00	; 0
 532:	04 c0       	rjmp	.+8      	; 0x53c <log+0x50>
 534:	0e 94 36 01 	call	0x26c	; 0x26c <__addsf3>
 538:	e5 e9       	ldi	r30, 0x95	; 149
 53a:	f0 e0       	ldi	r31, 0x00	; 0
 53c:	0e 94 39 03 	call	0x672	; 0x672 <__fp_powser>
 540:	8b 01       	movw	r16, r22
 542:	be 01       	movw	r22, r28
 544:	ec 01       	movw	r28, r24
 546:	fb 2e       	mov	r15, r27
 548:	6f 57       	subi	r22, 0x7F	; 127
 54a:	71 09       	sbc	r23, r1
 54c:	75 95       	asr	r23
 54e:	77 1f       	adc	r23, r23
 550:	88 0b       	sbc	r24, r24
 552:	99 0b       	sbc	r25, r25
 554:	0e 94 da 01 	call	0x3b4	; 0x3b4 <__floatsisf>
 558:	28 e1       	ldi	r18, 0x18	; 24
 55a:	32 e7       	ldi	r19, 0x72	; 114
 55c:	41 e3       	ldi	r20, 0x31	; 49
 55e:	5f e3       	ldi	r21, 0x3F	; 63
 560:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__mulsf3x>
 564:	af 2d       	mov	r26, r15
 566:	98 01       	movw	r18, r16
 568:	ae 01       	movw	r20, r28
 56a:	ff 90       	pop	r15
 56c:	0f 91       	pop	r16
 56e:	1f 91       	pop	r17
 570:	cf 91       	pop	r28
 572:	df 91       	pop	r29
 574:	0e 94 4d 01 	call	0x29a	; 0x29a <__addsf3x>
 578:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_round>

0000057c <__mulsf3>:
 57c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__mulsf3x>
 580:	0c 94 2c 02 	jmp	0x458	; 0x458 <__fp_round>
 584:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_pscA>
 588:	38 f0       	brcs	.+14     	; 0x598 <__mulsf3+0x1c>
 58a:	0e 94 25 02 	call	0x44a	; 0x44a <__fp_pscB>
 58e:	20 f0       	brcs	.+8      	; 0x598 <__mulsf3+0x1c>
 590:	95 23       	and	r25, r21
 592:	11 f0       	breq	.+4      	; 0x598 <__mulsf3+0x1c>
 594:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>
 598:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_nan>
 59c:	11 24       	eor	r1, r1
 59e:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_szero>

000005a2 <__mulsf3x>:
 5a2:	0e 94 3d 02 	call	0x47a	; 0x47a <__fp_split3>
 5a6:	70 f3       	brcs	.-36     	; 0x584 <__mulsf3+0x8>

000005a8 <__mulsf3_pse>:
 5a8:	95 9f       	mul	r25, r21
 5aa:	c1 f3       	breq	.-16     	; 0x59c <__mulsf3+0x20>
 5ac:	95 0f       	add	r25, r21
 5ae:	50 e0       	ldi	r21, 0x00	; 0
 5b0:	55 1f       	adc	r21, r21
 5b2:	62 9f       	mul	r22, r18
 5b4:	f0 01       	movw	r30, r0
 5b6:	72 9f       	mul	r23, r18
 5b8:	bb 27       	eor	r27, r27
 5ba:	f0 0d       	add	r31, r0
 5bc:	b1 1d       	adc	r27, r1
 5be:	63 9f       	mul	r22, r19
 5c0:	aa 27       	eor	r26, r26
 5c2:	f0 0d       	add	r31, r0
 5c4:	b1 1d       	adc	r27, r1
 5c6:	aa 1f       	adc	r26, r26
 5c8:	64 9f       	mul	r22, r20
 5ca:	66 27       	eor	r22, r22
 5cc:	b0 0d       	add	r27, r0
 5ce:	a1 1d       	adc	r26, r1
 5d0:	66 1f       	adc	r22, r22
 5d2:	82 9f       	mul	r24, r18
 5d4:	22 27       	eor	r18, r18
 5d6:	b0 0d       	add	r27, r0
 5d8:	a1 1d       	adc	r26, r1
 5da:	62 1f       	adc	r22, r18
 5dc:	73 9f       	mul	r23, r19
 5de:	b0 0d       	add	r27, r0
 5e0:	a1 1d       	adc	r26, r1
 5e2:	62 1f       	adc	r22, r18
 5e4:	83 9f       	mul	r24, r19
 5e6:	a0 0d       	add	r26, r0
 5e8:	61 1d       	adc	r22, r1
 5ea:	22 1f       	adc	r18, r18
 5ec:	74 9f       	mul	r23, r20
 5ee:	33 27       	eor	r19, r19
 5f0:	a0 0d       	add	r26, r0
 5f2:	61 1d       	adc	r22, r1
 5f4:	23 1f       	adc	r18, r19
 5f6:	84 9f       	mul	r24, r20
 5f8:	60 0d       	add	r22, r0
 5fa:	21 1d       	adc	r18, r1
 5fc:	82 2f       	mov	r24, r18
 5fe:	76 2f       	mov	r23, r22
 600:	6a 2f       	mov	r22, r26
 602:	11 24       	eor	r1, r1
 604:	9f 57       	subi	r25, 0x7F	; 127
 606:	50 40       	sbci	r21, 0x00	; 0
 608:	9a f0       	brmi	.+38     	; 0x630 <__mulsf3_pse+0x88>
 60a:	f1 f0       	breq	.+60     	; 0x648 <__mulsf3_pse+0xa0>
 60c:	88 23       	and	r24, r24
 60e:	4a f0       	brmi	.+18     	; 0x622 <__mulsf3_pse+0x7a>
 610:	ee 0f       	add	r30, r30
 612:	ff 1f       	adc	r31, r31
 614:	bb 1f       	adc	r27, r27
 616:	66 1f       	adc	r22, r22
 618:	77 1f       	adc	r23, r23
 61a:	88 1f       	adc	r24, r24
 61c:	91 50       	subi	r25, 0x01	; 1
 61e:	50 40       	sbci	r21, 0x00	; 0
 620:	a9 f7       	brne	.-22     	; 0x60c <__mulsf3_pse+0x64>
 622:	9e 3f       	cpi	r25, 0xFE	; 254
 624:	51 05       	cpc	r21, r1
 626:	80 f0       	brcs	.+32     	; 0x648 <__mulsf3_pse+0xa0>
 628:	0c 94 15 02 	jmp	0x42a	; 0x42a <__fp_inf>
 62c:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__fp_szero>
 630:	5f 3f       	cpi	r21, 0xFF	; 255
 632:	e4 f3       	brlt	.-8      	; 0x62c <__mulsf3_pse+0x84>
 634:	98 3e       	cpi	r25, 0xE8	; 232
 636:	d4 f3       	brlt	.-12     	; 0x62c <__mulsf3_pse+0x84>
 638:	86 95       	lsr	r24
 63a:	77 95       	ror	r23
 63c:	67 95       	ror	r22
 63e:	b7 95       	ror	r27
 640:	f7 95       	ror	r31
 642:	e7 95       	ror	r30
 644:	9f 5f       	subi	r25, 0xFF	; 255
 646:	c1 f7       	brne	.-16     	; 0x638 <__mulsf3_pse+0x90>
 648:	fe 2b       	or	r31, r30
 64a:	88 0f       	add	r24, r24
 64c:	91 1d       	adc	r25, r1
 64e:	96 95       	lsr	r25
 650:	87 95       	ror	r24
 652:	97 f9       	bld	r25, 7
 654:	08 95       	ret

00000656 <__fp_mpack>:
 656:	9f 3f       	cpi	r25, 0xFF	; 255
 658:	31 f0       	breq	.+12     	; 0x666 <__fp_mpack_finite+0xc>

0000065a <__fp_mpack_finite>:
 65a:	91 50       	subi	r25, 0x01	; 1
 65c:	20 f4       	brcc	.+8      	; 0x666 <__fp_mpack_finite+0xc>
 65e:	87 95       	ror	r24
 660:	77 95       	ror	r23
 662:	67 95       	ror	r22
 664:	b7 95       	ror	r27
 666:	88 0f       	add	r24, r24
 668:	91 1d       	adc	r25, r1
 66a:	96 95       	lsr	r25
 66c:	87 95       	ror	r24
 66e:	97 f9       	bld	r25, 7
 670:	08 95       	ret

00000672 <__fp_powser>:
 672:	df 93       	push	r29
 674:	cf 93       	push	r28
 676:	1f 93       	push	r17
 678:	0f 93       	push	r16
 67a:	ff 92       	push	r15
 67c:	ef 92       	push	r14
 67e:	df 92       	push	r13
 680:	7b 01       	movw	r14, r22
 682:	8c 01       	movw	r16, r24
 684:	68 94       	set
 686:	06 c0       	rjmp	.+12     	; 0x694 <__fp_powser+0x22>
 688:	da 2e       	mov	r13, r26
 68a:	ef 01       	movw	r28, r30
 68c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__mulsf3x>
 690:	fe 01       	movw	r30, r28
 692:	e8 94       	clt
 694:	a5 91       	lpm	r26, Z+
 696:	25 91       	lpm	r18, Z+
 698:	35 91       	lpm	r19, Z+
 69a:	45 91       	lpm	r20, Z+
 69c:	55 91       	lpm	r21, Z+
 69e:	a6 f3       	brts	.-24     	; 0x688 <__fp_powser+0x16>
 6a0:	ef 01       	movw	r28, r30
 6a2:	0e 94 4d 01 	call	0x29a	; 0x29a <__addsf3x>
 6a6:	fe 01       	movw	r30, r28
 6a8:	97 01       	movw	r18, r14
 6aa:	a8 01       	movw	r20, r16
 6ac:	da 94       	dec	r13
 6ae:	69 f7       	brne	.-38     	; 0x68a <__fp_powser+0x18>
 6b0:	df 90       	pop	r13
 6b2:	ef 90       	pop	r14
 6b4:	ff 90       	pop	r15
 6b6:	0f 91       	pop	r16
 6b8:	1f 91       	pop	r17
 6ba:	cf 91       	pop	r28
 6bc:	df 91       	pop	r29
 6be:	08 95       	ret

000006c0 <__udivmodsi4>:
 6c0:	a1 e2       	ldi	r26, 0x21	; 33
 6c2:	1a 2e       	mov	r1, r26
 6c4:	aa 1b       	sub	r26, r26
 6c6:	bb 1b       	sub	r27, r27
 6c8:	fd 01       	movw	r30, r26
 6ca:	0d c0       	rjmp	.+26     	; 0x6e6 <__udivmodsi4_ep>

000006cc <__udivmodsi4_loop>:
 6cc:	aa 1f       	adc	r26, r26
 6ce:	bb 1f       	adc	r27, r27
 6d0:	ee 1f       	adc	r30, r30
 6d2:	ff 1f       	adc	r31, r31
 6d4:	a2 17       	cp	r26, r18
 6d6:	b3 07       	cpc	r27, r19
 6d8:	e4 07       	cpc	r30, r20
 6da:	f5 07       	cpc	r31, r21
 6dc:	20 f0       	brcs	.+8      	; 0x6e6 <__udivmodsi4_ep>
 6de:	a2 1b       	sub	r26, r18
 6e0:	b3 0b       	sbc	r27, r19
 6e2:	e4 0b       	sbc	r30, r20
 6e4:	f5 0b       	sbc	r31, r21

000006e6 <__udivmodsi4_ep>:
 6e6:	66 1f       	adc	r22, r22
 6e8:	77 1f       	adc	r23, r23
 6ea:	88 1f       	adc	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	1a 94       	dec	r1
 6f0:	69 f7       	brne	.-38     	; 0x6cc <__udivmodsi4_loop>
 6f2:	60 95       	com	r22
 6f4:	70 95       	com	r23
 6f6:	80 95       	com	r24
 6f8:	90 95       	com	r25
 6fa:	9b 01       	movw	r18, r22
 6fc:	ac 01       	movw	r20, r24
 6fe:	bd 01       	movw	r22, r26
 700:	cf 01       	movw	r24, r30
 702:	08 95       	ret

00000704 <_exit>:
 704:	f8 94       	cli

00000706 <__stop_program>:
 706:	ff cf       	rjmp	.-2      	; 0x706 <__stop_program>
